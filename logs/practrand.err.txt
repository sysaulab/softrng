PRACTRAND ERROR LOG (stderr)
../src/platform_specifics.cpp:86:9: warning: using the result of an assignment as a condition without parentheses [-Wparentheses]
                if (f = std::fopen("/dev/urandom", "rb")) {
                    ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../src/platform_specifics.cpp:86:9: note: place parentheses around the assignment to silence this warning
                if (f = std::fopen("/dev/urandom", "rb")) {
                      ^
                    (                                   )
../src/platform_specifics.cpp:86:9: note: use '==' to turn this assignment into an equality comparison
                if (f = std::fopen("/dev/urandom", "rb")) {
                      ^
                      ==
1 warning generated.
../src/tests.cpp:1743:10: warning: array index -1 is before the beginning of the array [-Warray-bounds]
                old1 = data->as16[-1];
                       ^          ~~
../include/PractRand/tests.h:39:4: note: array 'as16' declared here
                        Uint16 as16[SIZE/2];
                        ^
../src/tests.cpp:1744:10: warning: array index -2 is before the beginning of the array [-Warray-bounds]
                old2 = data->as16[-2];
                       ^          ~~
../include/PractRand/tests.h:39:4: note: array 'as16' declared here
                        Uint16 as16[SIZE/2];
                        ^
../src/tests.cpp:1773:27: warning: format specifies type 'int' but the argument has type 'unsigned long' [-Wformat]
                std::printf("%d: %d\n", i, counts2[i]);
                             ~~         ^
                             %lu
../src/tests.cpp:3843:26: warning: array index -1 is before the beginning of the array [-Warray-bounds]
                                cur = reverse_bits32(data->as32[-1]);
                                                     ^          ~~
../include/PractRand/tests.h:40:4: note: array 'as32' declared here
                        Uint32 as32[SIZE/4];
                        ^
../src/tests.cpp:3907:11: warning: array index -2 is before the beginning of the array [-Warray-bounds]
                                cur = data->as32[-2];//
                                      ^          ~~
../include/PractRand/tests.h:40:4: note: array 'as32' declared here
                        Uint32 as32[SIZE/4];
                        ^
../src/tests.cpp:4357:10: warning: array index -2 is before the beginning of the array [-Warray-bounds]
                        cur = data->as32[-2];//64 bit samples on 32 bit words
                              ^          ~~
../include/PractRand/tests.h:40:4: note: array 'as32' declared here
                        Uint32 as32[SIZE/4];
                        ^
../src/tests.cpp:4358:11: warning: array index -1 is before the beginning of the array [-Warray-bounds]
                        next = data->as32[-1];
                               ^          ~~
../include/PractRand/tests.h:40:4: note: array 'as32' declared here
                        Uint32 as32[SIZE/4];
                        ^
../src/tests.cpp:5221:36: warning: expression result unused [-Wunused-value]
                        mask_high = Uint64(Sint64(-1)), mask_low;
                                                        ^~~~~~~~
../src/tests.cpp:5438:36: warning: expression result unused [-Wunused-value]
                        mask_high = Uint64(Sint64(-1)), mask_low;
                                                        ^~~~~~~~
../src/tests.cpp:7084:32: warning: use of logical '||' with constant operand [-Wconstant-logical-operand]
                        if (ALIGNMENT1 % ALIGNMENT2 || SIZE1 % ALIGNMENT2) bits_used = bits_used + ALIGNMENT2 - 1; bits_used &= 65535 ^ (ALIGNMENT2 - 1);
                                                    ^  ~~~~~~~~~~~~~~~~~~
../src/tests.cpp:7084:32: note: use '|' for a bitwise operation
                        if (ALIGNMENT1 % ALIGNMENT2 || SIZE1 % ALIGNMENT2) bits_used = bits_used + ALIGNMENT2 - 1; bits_used &= 65535 ^ (ALIGNMENT2 - 1);
                                                    ^~
                                                    |
10 warnings generated.
../src/RNGs/chacha.cpp:52:70: warning: 'memset' call operates on objects of type 'PractRand::RNGs::Raw::chacha' while the size is based on a different type 'PractRand::RNGs::Raw::chacha *' [-Wsizeof-pointer-memaccess]
PractRand::RNGs::Raw::chacha::~chacha() {std::memset(this, 0, sizeof(this));}
                                                     ~~~~            ^~~~
../src/RNGs/chacha.cpp:52:70: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
PractRand::RNGs::Raw::chacha::~chacha() {std::memset(this, 0, sizeof(this));}
                                                                     ^~~~
1 warning generated.
../src/RNGs/efiix.cpp:230:77: warning: 'memset' call operates on objects of type 'PractRand::RNGs::Raw::efiix8x48' while the size is based on a different type 'PractRand::RNGs::Raw::efiix8x48 *' [-Wsizeof-pointer-memaccess]
PractRand::RNGs::Raw::efiix8x48::~efiix8x48() { std::memset(this, 0, sizeof(this)); }
                                                            ~~~~            ^~~~
../src/RNGs/efiix.cpp:230:77: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
PractRand::RNGs::Raw::efiix8x48::~efiix8x48() { std::memset(this, 0, sizeof(this)); }
                                                                            ^~~~
../src/RNGs/efiix.cpp:231:79: warning: 'memset' call operates on objects of type 'PractRand::RNGs::Raw::efiix16x48' while the size is based on a different type 'PractRand::RNGs::Raw::efiix16x48 *' [-Wsizeof-pointer-memaccess]
PractRand::RNGs::Raw::efiix16x48::~efiix16x48() { std::memset(this, 0, sizeof(this)); }
                                                              ~~~~            ^~~~
../src/RNGs/efiix.cpp:231:79: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
PractRand::RNGs::Raw::efiix16x48::~efiix16x48() { std::memset(this, 0, sizeof(this)); }
                                                                              ^~~~
../src/RNGs/efiix.cpp:232:79: warning: 'memset' call operates on objects of type 'PractRand::RNGs::Raw::efiix32x48' while the size is based on a different type 'PractRand::RNGs::Raw::efiix32x48 *' [-Wsizeof-pointer-memaccess]
PractRand::RNGs::Raw::efiix32x48::~efiix32x48() { std::memset(this, 0, sizeof(this)); }
                                                              ~~~~            ^~~~
../src/RNGs/efiix.cpp:232:79: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
PractRand::RNGs::Raw::efiix32x48::~efiix32x48() { std::memset(this, 0, sizeof(this)); }
                                                                              ^~~~
../src/RNGs/efiix.cpp:233:79: warning: 'memset' call operates on objects of type 'PractRand::RNGs::Raw::efiix64x48' while the size is based on a different type 'PractRand::RNGs::Raw::efiix64x48 *' [-Wsizeof-pointer-memaccess]
PractRand::RNGs::Raw::efiix64x48::~efiix64x48() { std::memset(this, 0, sizeof(this)); }
                                                              ~~~~            ^~~~
../src/RNGs/efiix.cpp:233:79: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
PractRand::RNGs::Raw::efiix64x48::~efiix64x48() { std::memset(this, 0, sizeof(this)); }
                                                                              ^~~~
../src/RNGs/efiix.cpp:237:77: warning: use of logical '||' with constant operand [-Wconstant-logical-operand]
        typedef Word check_efiix_array_sizes[(ITERATION_SIZE & (ITERATION_SIZE-1)) || (INDIRECTION_SIZE & (INDIRECTION_SIZE-1)) ? -1 : 1];
                                                                                   ^  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../src/RNGs/efiix.cpp:237:77: note: use '|' for a bitwise operation
        typedef Word check_efiix_array_sizes[(ITERATION_SIZE & (ITERATION_SIZE-1)) || (INDIRECTION_SIZE & (INDIRECTION_SIZE-1)) ? -1 : 1];
                                                                                   ^~
                                                                                   |
../src/RNGs/efiix.cpp:312:77: warning: use of logical '||' with constant operand [-Wconstant-logical-operand]
        typedef Word check_efiix_array_sizes[(ITERATION_SIZE & (ITERATION_SIZE-1)) || (INDIRECTION_SIZE & (INDIRECTION_SIZE-1)) ? -1 : 1];
                                                                                   ^  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../src/RNGs/efiix.cpp:312:77: note: use '|' for a bitwise operation
        typedef Word check_efiix_array_sizes[(ITERATION_SIZE & (ITERATION_SIZE-1)) || (INDIRECTION_SIZE & (INDIRECTION_SIZE-1)) ? -1 : 1];
                                                                                   ^~
                                                                                   |
../src/RNGs/efiix.cpp:343:77: warning: use of logical '||' with constant operand [-Wconstant-logical-operand]
        typedef Word check_efiix_array_sizes[(ITERATION_SIZE & (ITERATION_SIZE-1)) || (INDIRECTION_SIZE & (INDIRECTION_SIZE-1)) ? -1 : 1];
                                                                                   ^  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../src/RNGs/efiix.cpp:343:77: note: use '|' for a bitwise operation
        typedef Word check_efiix_array_sizes[(ITERATION_SIZE & (ITERATION_SIZE-1)) || (INDIRECTION_SIZE & (INDIRECTION_SIZE-1)) ? -1 : 1];
                                                                                   ^~
                                                                                   |
../src/RNGs/efiix.cpp:386:77: warning: use of logical '||' with constant operand [-Wconstant-logical-operand]
        typedef Word check_efiix_array_sizes[(ITERATION_SIZE & (ITERATION_SIZE-1)) || (INDIRECTION_SIZE & (INDIRECTION_SIZE-1)) ? -1 : 1];
                                                                                   ^  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../src/RNGs/efiix.cpp:386:77: note: use '|' for a bitwise operation
        typedef Word check_efiix_array_sizes[(ITERATION_SIZE & (ITERATION_SIZE-1)) || (INDIRECTION_SIZE & (INDIRECTION_SIZE-1)) ? -1 : 1];
                                                                                   ^~
                                                                                   |
8 warnings generated.
../src/RNGs/hc256.cpp:21:68: warning: 'memset' call operates on objects of type 'PractRand::RNGs::Raw::hc256' while the size is based on a different type 'PractRand::RNGs::Raw::hc256 *' [-Wsizeof-pointer-memaccess]
PractRand::RNGs::Raw::hc256::~hc256() {std::memset(this, 0, sizeof(this));}
                                                   ~~~~            ^~~~
../src/RNGs/hc256.cpp:21:68: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
PractRand::RNGs::Raw::hc256::~hc256() {std::memset(this, 0, sizeof(this));}
                                                                   ^~~~
1 warning generated.
../src/RNGs/isaac.cpp:27:80: warning: 'memset' call operates on objects of type 'PractRand::RNGs::Raw::isaac32x256' while the size is based on a different type 'PractRand::RNGs::Raw::isaac32x256 *' [-Wsizeof-pointer-memaccess]
PractRand::RNGs::Raw::isaac32x256::~isaac32x256() {std::memset(this, 0, sizeof(this));}
                                                               ~~~~            ^~~~
../src/RNGs/isaac.cpp:27:80: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
PractRand::RNGs::Raw::isaac32x256::~isaac32x256() {std::memset(this, 0, sizeof(this));}
                                                                               ^~~~
../src/RNGs/isaac.cpp:28:80: warning: 'memset' call operates on objects of type 'PractRand::RNGs::Raw::isaac64x256' while the size is based on a different type 'PractRand::RNGs::Raw::isaac64x256 *' [-Wsizeof-pointer-memaccess]
PractRand::RNGs::Raw::isaac64x256::~isaac64x256() {std::memset(this, 0, sizeof(this));}
                                                               ~~~~            ^~~~
../src/RNGs/isaac.cpp:28:80: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
PractRand::RNGs::Raw::isaac64x256::~isaac64x256() {std::memset(this, 0, sizeof(this));}
                                                                               ^~~~
2 warnings generated.
../src/RNGs/salsa.cpp:49:68: warning: 'memset' call operates on objects of type 'PractRand::RNGs::Raw::salsa' while the size is based on a different type 'PractRand::RNGs::Raw::salsa *' [-Wsizeof-pointer-memaccess]
PractRand::RNGs::Raw::salsa::~salsa() {std::memset(this, 0, sizeof(this));}
                                                   ~~~~            ^~~~
../src/RNGs/salsa.cpp:49:68: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
PractRand::RNGs::Raw::salsa::~salsa() {std::memset(this, 0, sizeof(this));}
                                                                   ^~~~
1 warning generated.
../src/RNGs/trivium.cpp:28:72: warning: 'memset' call operates on objects of type 'PractRand::RNGs::Raw::trivium' while the size is based on a different type 'PractRand::RNGs::Raw::trivium *' [-Wsizeof-pointer-memaccess]
PractRand::RNGs::Raw::trivium::~trivium() {std::memset(this, 0, sizeof(this));}
                                                       ~~~~            ^~~~
../src/RNGs/trivium.cpp:28:72: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
PractRand::RNGs::Raw::trivium::~trivium() {std::memset(this, 0, sizeof(this));}
                                                                       ^~~~
1 warning generated.
ar: creating archive ../bin/libpracrand.a
../tools/Test_calibration.cpp:113:72: warning: format specifies type 'int' but the argument has type 'long' [-Wformat]
        std::printf("{\"%s\",%9.0f,%5d,%4d, {", name.c_str(), (double)blocks, (long)ss.size(), (long)ss.num_duplicates());
                                   ~~~                                        ^~~~~~~~~~~~~~~
                                   %5ld
../tools/Test_calibration.cpp:113:89: warning: format specifies type 'int' but the argument has type 'long' [-Wformat]
        std::printf("{\"%s\",%9.0f,%5d,%4d, {", name.c_str(), (double)blocks, (long)ss.size(), (long)ss.num_duplicates());
                                       ~~~                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~
                                       %4ld
../tools/Test_calibration.cpp:237:64: warning: array index 15 is past the end of the array (which contains 15 elements) [-Warray-bounds]
        double even_chance = (level <= 15) ? chance_skipped[level] : (chance_skipped[15] * std::pow(0.5, 0.5 * (level-15)));
                                                                      ^              ~~
../tools/Test_calibration.cpp:219:2: note: array 'chance_skipped' declared here
        static double chance_skipped[15] = {
        ^
../tools/Test_calibration.cpp:588:50: warning: format specifies type 'int' but the argument has type 'size_type' (aka 'unsigned long') [-Wformat]
                                        std::printf("total= %d; duplicates= %d;\n", ss.rs.size(), ss.num_duplicates());
                                                            ~~                      ^~~~~~~~~~~~
                                                            %lu
../tools/Test_calibration.cpp:1057:68: warning: format specifies type 'double' but the argument has type 'long double' [-Wformat]
                std::printf("chance of a seed leading to a cycle < 2**32: %g\n", 1 / (1 - after2_16));
                                                                          ~~     ^~~~~~~~~~~~~~~~~~~
                                                                          %Lg
../tools/Test_calibration.cpp:1062:68: warning: format specifies type 'double' but the argument has type 'long double' [-Wformat]
                std::printf("chance of a seed leading to a cycle < 2**40: %g\n", 1 / (1 - after2_24));
                                                                          ~~     ^~~~~~~~~~~~~~~~~~~
                                                                          %Lg
../tools/Test_calibration.cpp:1067:68: warning: format specifies type 'double' but the argument has type 'long double' [-Wformat]
                std::printf("chance of a seed leading to a cycle < 2**48: %f\n", 1 / (1 - after2_32));
                                                                          ~~     ^~~~~~~~~~~~~~~~~~~
                                                                          %Lf
7 warnings generated.
