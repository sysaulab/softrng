TESTU01 ERROR LOG (stderr)
rm: conftest.dSYM: is a directory
rm: conftest.dSYM: is a directory
rm: conftest.dSYM: is a directory
rm: conftest.dSYM: is a directory
rm: conftest.dSYM: is a directory
rm: conftest.dSYM: is a directory
rm: conftest.dSYM: is a directory
rm: conftest.dSYM: is a directory
rm: conftest.dSYM: is a directory
rm: conftest.dSYM: is a directory
rm: conftest.dSYM: is a directory
rm: conftest.dSYM: is a directory
rm: conftest.dSYM: is a directory
rm: conftest.dSYM: is a directory
rm: conftest.dSYM: is a directory
rm: conftest.dSYM: is a directory
rm: conftest.dSYM: is a directory
rm: conftest.dSYM: is a directory
rm: conftest.dSYM: is a directory
rm: conftest.dSYM: is a directory
util.c:138:27: warning: 'sscanf' may overflow; destination buffer in argument 3 has size 6, but the corresponding specifier may require size 7 [-Wfortify-source]
   j = sscanf (S, " %6s", B);
                          ^
1 warning generated.
mkdir: .libs: File exists
mkdir: .libs: File exists
gofw.c:99:16: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
   fprintf (f, S);
               ^
gofw.c:99:16: note: treat the string as an argument to avoid this
   fprintf (f, S);
               ^
               "%s", 
gofw.c:109:16: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
   fprintf (f, S);
               ^
gofw.c:109:16: note: treat the string as an argument to avoid this
   fprintf (f, S);
               ^
               "%s", 
gofw.c:629:15: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
      printf (S);
              ^
gofw.c:629:15: note: treat the string as an argument to avoid this
      printf (S);
              ^
              "%s", 
3 warnings generated.
mkdir: .libs: File exists
uknuth.c:62:6: warning: a function definition without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]
void ran_array1(aa,n)    /* put n new random numbers in aa */
     ^
uknuth.c:78:6: warning: a function definition without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]
void ran_start1(seed)    /* do this before using ran_array1 */
     ^
uknuth.c:243:6: warning: a function definition without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]
void ranf_array1(aa,n)    /* put n new random fractions in aa */
     ^
uknuth.c:258:6: warning: a function definition without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]
void ranf_start1(seed)    /* do this before using ranf_array1 */
     ^
4 warnings generated.
In file included from ucrypto.c:515:
./ucryptoIS.c:199:17: warning: a function definition without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]
static void     isaac(ctx)
                ^
./ucryptoIS.c:148:13: warning: a function declaration without a prototype is deprecated in all versions of C and is treated as a zero-parameter prototype in C2x, conflicting with a subsequent definition [-Wdeprecated-non-prototype]
static void isaac(/*_ randctx *r _*/);
            ^
./ucryptoIS.c:236:13: warning: a function definition without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]
static void randinit(ctx, flag)
            ^
./ucryptoIS.c:146:13: warning: a function declaration without a prototype is deprecated in all versions of C and is treated as a zero-parameter prototype in C2x, conflicting with a subsequent definition [-Wdeprecated-non-prototype]
static void randinit(/*_ randctx *r, word flag _*/);
            ^
4 warnings generated.
ubrent.c:67:1: warning: '/*' within block comment [-Wcomment]
/*
^
ubrent.c:193:18: warning: unsequenced modification and access to 'v' [-Wunsequenced]
         v ^= (v ^= (v ^= v << 13) >> 17) << 5; /* This recurrence has period
           ~~    ^
ubrent.c:198:26: warning: unsequenced modification and access to 'v' [-Wunsequenced]
         x[k] = (v ^= (v ^= (v ^= v << 13) >> 17) << 5) + (w += weil);
                   ~~    ^
ubrent.c:204:18: warning: unsequenced modification and access to 't' [-Wunsequenced]
         t ^= (t ^= t << a) >> b;
           ~~    ^
ubrent.c:213:12: warning: unsequenced modification and access to 't' [-Wunsequenced]
   t ^= (t ^= t << a) >> b;       /* (I + L^a)(I + R^b) */
     ~~    ^
ubrent.c:301:12: warning: unsequenced modification and access to 't' [-Wunsequenced]
   t ^= (t ^= t << param->a) >> param->b;       /* (I + L^a)(I + R^b) */
     ~~    ^
ubrent.c:410:15: warning: unsequenced modification and access to 'v' [-Wunsequenced]
      v ^= (v ^= (v ^= v << 13) >> 17) << 5; /* This recurrence has period
        ~~    ^
ubrent.c:416:33: warning: unsequenced modification and access to 'v' [-Wunsequenced]
         state->x[k] = (v ^= (v ^= (v ^= v << 13) >> 17) << 5) +
                          ~~    ^
ubrent.c:422:33: warning: unsequenced modification and access to 'v' [-Wunsequenced]
         state->x[k] = (v ^= (v ^= (v ^= v << 13) >> 17) << 5);
                          ~~    ^
ubrent.c:429:15: warning: unsequenced modification and access to 't' [-Wunsequenced]
      t ^= (t ^= t << a) >> b;
        ~~    ^
ubrent.c:537:18: warning: unsequenced modification and access to 'v' [-Wunsequenced]
         v ^= (v ^= v << 7) >> 9; /* This recurrence has period 2^64-1 */
           ~~    ^
ubrent.c:541:26: warning: unsequenced modification and access to 'v' [-Wunsequenced]
         x[k] = (v ^= (v ^= v << 7) >> 9) + (w += weil);
                   ~~    ^
ubrent.c:547:18: warning: unsequenced modification and access to 't' [-Wunsequenced]
         t ^= (t ^= t << a) >> b;
           ~~    ^
ubrent.c:557:12: warning: unsequenced modification and access to 't' [-Wunsequenced]
   t ^= (t ^= t << a) >> b;       /* (I + L^a)(I + R^b) */
     ~~    ^
ubrent.c:640:12: warning: unsequenced modification and access to 't' [-Wunsequenced]
   t ^= (t ^= t << param->a) >> param->b;       /* (I + L^a)(I + R^b) */
     ~~    ^
ubrent.c:748:15: warning: unsequenced modification and access to 'v' [-Wunsequenced]
      v ^= (v ^= v << 7) >> 9; /* This recurrence has period 2^64-1 */
        ~~    ^
ubrent.c:754:33: warning: unsequenced modification and access to 'v' [-Wunsequenced]
         state->x[k] = (v ^= (v ^= v << 7) >> 9) + (state->w += param->weil);
                          ~~    ^
ubrent.c:759:33: warning: unsequenced modification and access to 'v' [-Wunsequenced]
         state->x[k] = (v ^= (v ^= v << 7) >> 9);
                          ~~    ^
ubrent.c:768:15: warning: unsequenced modification and access to 't' [-Wunsequenced]
      t ^= (t ^= t << a) >> b;
        ~~    ^
ubrent.c:843:18: warning: unsequenced modification and access to 'v' [-Wunsequenced]
         v ^= (v ^= v << 7) >> 9; /* This recurrence has period 2^64-1 */
           ~~    ^
ubrent.c:847:26: warning: unsequenced modification and access to 'v' [-Wunsequenced]
         x[k] = (v ^= (v ^= v << 7) >> 9) + (w += weil);
                   ~~    ^
ubrent.c:853:18: warning: unsequenced modification and access to 't' [-Wunsequenced]
         t ^= (t ^= t << a) >> b;
           ~~    ^
ubrent.c:865:15: warning: unsequenced modification and access to 't' [-Wunsequenced]
      t ^= (t ^= t << a) >> b;    /* (I + L^a)(I + R^b) */
        ~~    ^
23 warnings generated.
scatter.c:428:16: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
   fprintf (f, Title);
               ^~~~~
scatter.c:428:16: note: treat the string as an argument to avoid this
   fprintf (f, Title);
               ^
               "%s", 
scatter.c:559:25: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
            fprintf (f, q);
                        ^
scatter.c:559:25: note: treat the string as an argument to avoid this
            fprintf (f, q);
                        ^
                        "%s", 
scatter.c:566:19: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
      fprintf (f, q);
                  ^
scatter.c:566:19: note: treat the string as an argument to avoid this
      fprintf (f, q);
                  ^
                  "%s", 
scatter.c:568:19: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
      fprintf (f, Title);
                  ^~~~~
scatter.c:568:19: note: treat the string as an argument to avoid this
      fprintf (f, Title);
                  ^
                  "%s", 
scatter.c:598:19: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
      fprintf (f, Nout3);
                  ^~~~~
scatter.c:598:19: note: treat the string as an argument to avoid this
      fprintf (f, Nout3);
                  ^
                  "%s", 
scatter.c:605:16: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
   fprintf (f, Nout2);
               ^~~~~
scatter.c:605:16: note: treat the string as an argument to avoid this
   fprintf (f, Nout2);
               ^
               "%s", 
swrite.c:84:8: warning: address of array 'swrite_ExperimentName' will always evaluate to 'true' [-Wpointer-bool-conversion]
   if (swrite_ExperimentName && strcmp (swrite_ExperimentName, "")) {
       ^~~~~~~~~~~~~~~~~~~~~ ~~
swrite.c:152:12: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
   printf (str);
           ^~~
swrite.c:152:12: note: treat the string as an argument to avoid this
   printf (str);
           ^
           "%s", 
swrite.c:166:12: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
   printf (str);
           ^~~
swrite.c:166:12: note: treat the string as an argument to avoid this
   printf (str);
           ^
           "%s", 
3 warnings generated.
6 warnings generated.
svaria.c:434:4: warning: 'strncat' will always overflow; destination buffer has size 101, but size argument is 200 [-Wbuiltin-memcpy-chk-size]
   strncat (chaine, str, (size_t) LEN2);
   ^
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/secure/_string.h:143:3: note: expanded from macro 'strncat'
                __builtin___strncat_chk (dest, __VA_ARGS__, __darwin_obsz (dest))
                ^
svaria.c:554:4: warning: 'strncat' will always overflow; destination buffer has size 101, but size argument is 200 [-Wbuiltin-memcpy-chk-size]
   strncat (chaine, str, (size_t) LEN2);
   ^
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/secure/_string.h:143:3: note: expanded from macro 'strncat'
                __builtin___strncat_chk (dest, __VA_ARGS__, __darwin_obsz (dest))
                ^
svaria.c:697:4: warning: 'strncat' will always overflow; destination buffer has size 101, but size argument is 200 [-Wbuiltin-memcpy-chk-size]
   strncat (chaine, str, (size_t) LEN2);
   ^
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/secure/_string.h:143:3: note: expanded from macro 'strncat'
                __builtin___strncat_chk (dest, __VA_ARGS__, __darwin_obsz (dest))
                ^
svaria.c:905:4: warning: 'strncat' will always overflow; destination buffer has size 101, but size argument is 200 [-Wbuiltin-memcpy-chk-size]
   strncat (chaine, str, (size_t) LEN2);
   ^
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/secure/_string.h:143:3: note: expanded from macro 'strncat'
                __builtin___strncat_chk (dest, __VA_ARGS__, __darwin_obsz (dest))
                ^
svaria.c:1070:8: warning: address of array 'swrite_ExperimentName' will always evaluate to 'true' [-Wpointer-bool-conversion]
   if (swrite_ExperimentName && strcmp (swrite_ExperimentName, "")) {
       ^~~~~~~~~~~~~~~~~~~~~ ~~
5 warnings generated.
sspacings.c:274:48: warning: 'memset' call operates on objects of type 'double' while the size is based on a different type 'double *' [-Wsizeof-pointer-memaccess]
   memset (res->LogCESig_sVal, 0, sizeof (res->LogCESig_sVal));
           ~~~~~~~~~~~~~~~~~~             ~~~~~^~~~~~~~~~~~~
sspacings.c:274:48: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
   memset (res->LogCESig_sVal, 0, sizeof (res->LogCESig_sVal));
                                          ~~~~~^~~~~~~~~~~~~
sspacings.c:275:48: warning: 'memset' call operates on objects of type 'double' while the size is based on a different type 'double *' [-Wsizeof-pointer-memaccess]
   memset (res->LogCESig_pVal, 0, sizeof (res->LogCESig_pVal));
           ~~~~~~~~~~~~~~~~~~             ~~~~~^~~~~~~~~~~~~
sspacings.c:275:48: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
   memset (res->LogCESig_pVal, 0, sizeof (res->LogCESig_pVal));
                                          ~~~~~^~~~~~~~~~~~~
sspacings.c:276:48: warning: 'memset' call operates on objects of type 'double' while the size is based on a different type 'double *' [-Wsizeof-pointer-memaccess]
   memset (res->LogCASig_sVal, 0, sizeof (res->LogCASig_sVal));
           ~~~~~~~~~~~~~~~~~~             ~~~~~^~~~~~~~~~~~~
sspacings.c:276:48: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
   memset (res->LogCASig_sVal, 0, sizeof (res->LogCASig_sVal));
                                          ~~~~~^~~~~~~~~~~~~
sspacings.c:277:48: warning: 'memset' call operates on objects of type 'double' while the size is based on a different type 'double *' [-Wsizeof-pointer-memaccess]
   memset (res->LogCASig_pVal, 0, sizeof (res->LogCASig_pVal));
           ~~~~~~~~~~~~~~~~~~             ~~~~~^~~~~~~~~~~~~
sspacings.c:277:48: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
   memset (res->LogCASig_pVal, 0, sizeof (res->LogCASig_pVal));
                                          ~~~~~^~~~~~~~~~~~~
sspacings.c:278:51: warning: 'memset' call operates on objects of type 'double' while the size is based on a different type 'double *' [-Wsizeof-pointer-memaccess]
   memset (res->SquareCESig_sVal, 0, sizeof (res->SquareCESig_sVal));
           ~~~~~~~~~~~~~~~~~~~~~             ~~~~~^~~~~~~~~~~~~~~~
sspacings.c:278:51: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
   memset (res->SquareCESig_sVal, 0, sizeof (res->SquareCESig_sVal));
                                             ~~~~~^~~~~~~~~~~~~~~~
sspacings.c:279:51: warning: 'memset' call operates on objects of type 'double' while the size is based on a different type 'double *' [-Wsizeof-pointer-memaccess]
   memset (res->SquareCESig_pVal, 0, sizeof (res->SquareCESig_pVal));
           ~~~~~~~~~~~~~~~~~~~~~             ~~~~~^~~~~~~~~~~~~~~~
sspacings.c:279:51: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
   memset (res->SquareCESig_pVal, 0, sizeof (res->SquareCESig_pVal));
                                             ~~~~~^~~~~~~~~~~~~~~~
sspacings.c:280:51: warning: 'memset' call operates on objects of type 'double' while the size is based on a different type 'double *' [-Wsizeof-pointer-memaccess]
   memset (res->SquareCASig_sVal, 0, sizeof (res->SquareCASig_sVal));
           ~~~~~~~~~~~~~~~~~~~~~             ~~~~~^~~~~~~~~~~~~~~~
sspacings.c:280:51: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
   memset (res->SquareCASig_sVal, 0, sizeof (res->SquareCASig_sVal));
                                             ~~~~~^~~~~~~~~~~~~~~~
sspacings.c:281:51: warning: 'memset' call operates on objects of type 'double' while the size is based on a different type 'double *' [-Wsizeof-pointer-memaccess]
   memset (res->SquareCASig_pVal, 0, sizeof (res->SquareCASig_pVal));
           ~~~~~~~~~~~~~~~~~~~~~             ~~~~~^~~~~~~~~~~~~~~~
sspacings.c:281:51: note: did you mean to dereference the argument to 'sizeof' (and multiply it by the number of elements)?
   memset (res->SquareCASig_pVal, 0, sizeof (res->SquareCASig_pVal));
                                             ~~~~~^~~~~~~~~~~~~~~~
8 warnings generated.
clang: error: no such file or directory: 'src/sr_testu01big.c'
